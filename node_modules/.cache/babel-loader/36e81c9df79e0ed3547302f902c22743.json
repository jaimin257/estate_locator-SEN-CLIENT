{"ast":null,"code":"import _toConsumableArray from \"/home/itsme/mydata/SEN/test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/itsme/mydata/SEN/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/itsme/mydata/SEN/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/itsme/mydata/SEN/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/itsme/mydata/SEN/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/itsme/mydata/SEN/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/itsme/mydata/SEN/test/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport $ from 'jquery';\nvar appurl = \"locahost:1433\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      LoginOpen: true,\n      RegisterOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"root-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, this.state.LoginOpen && React.createElement(LoginBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), this.state.RegisterOpen && React.createElement(RegisterBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"box-controller\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"controller \" + (this.state.LoginOpen ? \"selected-controller\" : \"\"),\n        onClick: this.LoginBox.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"div\", {\n        className: \"controller \" + (this.state.RegisterOpen ? \"selected-controller\" : \"\"),\n        onClick: this.RegisterBox.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Sign-up\")));\n    }\n  }, {\n    key: \"LoginBox\",\n    value: function LoginBox() {\n      this.setState({\n        LoginOpen: true,\n        RegisterOpen: false\n      });\n    }\n  }, {\n    key: \"RegisterBox\",\n    value: function RegisterBox() {\n      this.setState({\n        RegisterOpen: true,\n        LoginOpen: false\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar LoginBox =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(LoginBox, _React$Component2);\n\n  function LoginBox(props) {\n    var _this2;\n\n    _classCallCheck(this, LoginBox);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(LoginBox).call(this, props));\n    _this2.state = {\n      username: \"\",\n      password: \"\",\n      errors: []\n    };\n    return _this2;\n  }\n\n  _createClass(LoginBox, [{\n    key: \"showValidationErr\",\n    value: function showValidationErr(elm, msg) {\n      this.setState(function (prevState) {\n        return {\n          errors: [].concat(_toConsumableArray(prevState.errors), [{\n            elm: elm,\n            msg: msg\n          }])\n        };\n      });\n    }\n  }, {\n    key: \"clearValidationErr\",\n    value: function clearValidationErr(elm) {\n      this.setState(function (prevState) {\n        var newArr = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = prevState.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var err = _step.value;\n\n            if (elm != err.elm) {\n              newArr.push(err);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return {\n          errors: newArr\n        };\n      });\n    }\n  }, {\n    key: \"onUsernameChange\",\n    value: function onUsernameChange(param) {\n      this.setState({\n        username: param.target.value\n      });\n      this.clearValidationErr(\"username\");\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(param) {\n      this.setState({\n        password: param.target.value\n      });\n      this.clearValidationErr(\"password\");\n    }\n  }, {\n    key: \"submitLogin\",\n    value: function submitLogin(param) {\n      if (this.state.username == \"\") {\n        this.showValidationErr(\"username\", \"username cannot be empty\");\n      }\n\n      if (this.state.password == \"\") {\n        this.showValidationErr(\"password\", \"password cannot be empty\");\n      }\n\n      if (this.state.username !== \"\" && this.state.password !== \"\") {// jquery\n\n        /*$.ajax({\n          url: appurl + 'account/logIn',\n          data:{\n            email: 'nimeshngk@gmail.com',\n            password: 123456,\n          }\n          success: function(result){\n            alert('success');\n          }\n        })*/\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var usernameErr = null,\n          passwordErr = null;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.state.errors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var err = _step2.value;\n\n          if (err.elm == \"username\") {\n            usernameErr = err.msg;\n          }\n\n          if (err.elm == \"password\") {\n            passwordErr = err.msg;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"inner-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        className: \"login-input\",\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, usernameErr ? usernameErr : \"\")), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"login-input\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, passwordErr ? passwordErr : \"\")), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"login-btn\",\n        onClick: this.submitLogin.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return LoginBox;\n}(React.Component);\n\nvar RegisterBox =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(RegisterBox, _React$Component3);\n\n  function RegisterBox(props) {\n    var _this3;\n\n    _classCallCheck(this, RegisterBox);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(RegisterBox).call(this, props));\n    _this3.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      errors: []\n    };\n    return _this3;\n  }\n\n  _createClass(RegisterBox, [{\n    key: \"showValidationErr\",\n    value: function showValidationErr(elm, msg) {\n      this.setState(function (prevState) {\n        return {\n          errors: [].concat(_toConsumableArray(prevState.errors), [{\n            elm: elm,\n            msg: msg\n          }])\n        };\n      });\n    }\n  }, {\n    key: \"clearValidationErr\",\n    value: function clearValidationErr(elm) {\n      this.setState(function (prevState) {\n        var newArr = [];\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = prevState.errors[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var err = _step3.value;\n\n            if (elm != err.elm) {\n              newArr.push(err);\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        return {\n          errors: newArr\n        };\n      });\n    }\n  }, {\n    key: \"onUsernameChange\",\n    value: function onUsernameChange(param) {\n      this.setState({\n        username: param.target.value\n      });\n      this.clearValidationErr(\"username\");\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(param) {\n      this.setState({\n        password: param.target.value\n      });\n      this.clearValidationErr(\"password\");\n    }\n  }, {\n    key: \"onEmailChange\",\n    value: function onEmailChange(param) {\n      this.setState({\n        email: param.target.value\n      });\n      this.clearValidationErr(\"email\");\n    }\n  }, {\n    key: \"submitRegister\",\n    value: function submitRegister(param) {\n      console.log('get register request');\n\n      if (this.state.username == \"\") {\n        this.showValidationErr(\"username\", \"username cannot be empty\");\n      }\n\n      if (this.state.password == \"\") {\n        this.showValidationErr(\"password\", \"password cannot be empty\");\n      }\n\n      if (this.state.email == \"\") {\n        this.showValidationErr(\"email\", \"email cannot be empty\");\n      }\n\n      console.log(\"register request sent\");\n      $.ajax({\n        url: appurl + 'account/register',\n        data: {\n          email: 'nimeshngk@gmail.com',\n          password: 123456\n        },\n        success: function success(result) {\n          alert('success');\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var usernameErr = null,\n          passwordErr = null,\n          emailErr = null;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.state.errors[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var err = _step4.value;\n\n          if (err.elm == \"username\") {\n            usernameErr = err.msg;\n          }\n\n          if (err.elm == \"password\") {\n            passwordErr = err.msg;\n          }\n\n          if (err.elm == \"email\") {\n            emailErr = err.msg;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"inner-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Sign-up\"), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        className: \"login-input\",\n        placeholder: \"Username\",\n        onChange: this.onUsernameChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, usernameErr ? usernameErr : \"\")), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        className: \"login-input\",\n        placeholder: \"Email\",\n        onChange: this.onEmailChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, emailErr ? emailErr : \"\")), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"login-input\",\n        placeholder: \"Password\",\n        onChange: this.onPasswordChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, passwordErr ? passwordErr : \"\")), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"login-btn\",\n        onClick: this.submitRegister.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Sign-up\")));\n    }\n  }]);\n\n  return RegisterBox;\n}(React.Component);\n\nexport default App;\n/*\nonClick={this.submitRegister.bind(this)}\n\nonClick={this.LoginBox.bind(this)}\nonClick={this.RegisterBox.bind(this)}\n*/","map":{"version":3,"sources":["/home/itsme/mydata/SEN/test/src/App.js"],"names":["React","Component","$","appurl","App","props","state","LoginOpen","RegisterOpen","LoginBox","bind","RegisterBox","setState","username","password","errors","elm","msg","prevState","newArr","err","push","param","target","value","clearValidationErr","showValidationErr","usernameErr","passwordErr","submitLogin","email","console","log","ajax","url","data","success","result","alert","emailErr","onUsernameChange","onEmailChange","onPasswordChange","submitRegister"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport $ from 'jquery';\n\nlet appurl = \"locahost:1433\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      LoginOpen: true,\n      RegisterOpen: false\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"root-container\">\n        <div className=\"box-container\">\n          {this.state.LoginOpen && <LoginBox />}\n          {this.state.RegisterOpen && <RegisterBox />}\n        </div>\n        <div className=\"box-controller\">\n          <div\n            className={\n              \"controller \" +\n              (this.state.LoginOpen ? \"selected-controller\" : \"\")\n            }\n            onClick={this.LoginBox.bind(this)}\n          >\n            Login\n          </div>\n          <div\n            className={\n              \"controller \" +\n              (this.state.RegisterOpen ? \"selected-controller\" : \"\")\n            }\n            onClick={this.RegisterBox.bind(this)}\n          >\n            Sign-up\n          </div>\n        </div>\n      </div>\n    );\n  }\n  LoginBox() {\n    this.setState({ LoginOpen: true, RegisterOpen: false });\n  }\n\n  RegisterBox() {\n    this.setState({ RegisterOpen: true, LoginOpen: false });\n  }\n}\n\nclass LoginBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\", errors: [] };\n  }\n  showValidationErr(elm, msg) {\n    this.setState(prevState => ({\n      errors: [...prevState.errors, { elm, msg }]\n    }));\n  }\n  clearValidationErr(elm) {\n    this.setState(prevState => {\n      let newArr = [];\n      for (let err of prevState.errors) {\n        if (elm != err.elm) {\n          newArr.push(err);\n        }\n      }\n      return { errors: newArr };\n    });\n  }\n  onUsernameChange(param) {\n    this.setState({ username: param.target.value });\n    this.clearValidationErr(\"username\");\n  }\n  onPasswordChange(param) {\n    this.setState({ password: param.target.value });\n    this.clearValidationErr(\"password\");\n  }\n  submitLogin(param) {\n    if (this.state.username == \"\") {\n      this.showValidationErr(\"username\", \"username cannot be empty\");\n    }\n    if (this.state.password == \"\") {\n      this.showValidationErr(\"password\", \"password cannot be empty\");\n    }\n    if(this.state.username !== \"\" && this.state.password !== \"\"){\n      // jquery\n      /*$.ajax({\n        url: appurl + 'account/logIn',\n        data:{\n          email: 'nimeshngk@gmail.com',\n          password: 123456,\n        }\n        success: function(result){\n          alert('success');\n        }\n      })*/\n\n    }\n  }\n\n  render() {\n    let usernameErr = null,\n      passwordErr = null;\n    for (let err of this.state.errors) {\n      if (err.elm == \"username\") {\n        usernameErr = err.msg;\n      }\n      if (err.elm == \"password\") {\n        passwordErr = err.msg;\n      }\n    }\n    return (\n      <div className=\"inner-container\">\n        <div className=\"header\">Login</div>\n        <div className=\"box\">\n          <div className=\"input-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              className=\"login-input\"\n              placeholder=\"Username\"\n            />\n            <small className=\"danger-error\">\n              {usernameErr ? usernameErr : \"\"}\n            </small>\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"login-input\"\n              placeholder=\"Password\"\n            />\n            <small className=\"danger-error\">\n              {passwordErr ? passwordErr : \"\"}\n            </small>\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"login-btn\"\n            onClick={this.submitLogin.bind(this)}\n          >\n            Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass RegisterBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", email: \"\", password: \"\", errors: [] };\n  }\n\n  showValidationErr(elm, msg) {\n    this.setState(prevState => ({\n      errors: [...prevState.errors, { elm, msg }]\n    }));\n  }\n  clearValidationErr(elm) {\n    this.setState(prevState => {\n      let newArr = [];\n      for (let err of prevState.errors) {\n        if (elm != err.elm) {\n          newArr.push(err);\n        }\n      }\n      return { errors: newArr };\n    });\n  }\n  onUsernameChange(param) {\n    this.setState({ username: param.target.value });\n    this.clearValidationErr(\"username\");\n  }\n  onPasswordChange(param) {\n    this.setState({ password: param.target.value });\n    this.clearValidationErr(\"password\");\n  }\n  onEmailChange(param) {\n    this.setState({ email: param.target.value });\n    this.clearValidationErr(\"email\");\n  }\n  submitRegister(param) {\n    console.log('get register request');\n    if (this.state.username == \"\") {\n      this.showValidationErr(\"username\", \"username cannot be empty\");\n    }\n    if (this.state.password == \"\") {\n      this.showValidationErr(\"password\", \"password cannot be empty\");\n    }\n    if (this.state.email == \"\") {\n      this.showValidationErr(\"email\", \"email cannot be empty\");\n    }\n    console.log(\"register request sent\");\n    $.ajax({\n        url: appurl + 'account/register',\n        data:{\n          email: 'nimeshngk@gmail.com',\n          password: 123456\n        },\n        success: function(result){\n          alert('success');\n        }\n      })\n  }\n\n  render() {\n    let usernameErr = null,\n      passwordErr = null,\n      emailErr = null;\n    for (let err of this.state.errors) {\n      if (err.elm == \"username\") {\n        usernameErr = err.msg;\n      }\n      if (err.elm == \"password\") {\n        passwordErr = err.msg;\n      }\n      if (err.elm == \"email\") {\n        emailErr = err.msg;\n      }\n    }\n    return (\n      <div className=\"inner-container\">\n        <div className=\"header\">Sign-up</div>\n        <div className=\"box\">\n          <div className=\"input-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              className=\"login-input\"\n              placeholder=\"Username\"\n              onChange={this.onUsernameChange.bind(this)}\n            />\n            <small className=\"danger-error\">\n              {usernameErr ? usernameErr : \"\"}\n            </small>\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              className=\"login-input\"\n              placeholder=\"Email\"\n              onChange={this.onEmailChange.bind(this)}\n            />\n            <small className=\"danger-error\">{emailErr ? emailErr : \"\"}</small>\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"login-input\"\n              placeholder=\"Password\"\n              onChange={this.onPasswordChange.bind(this)}\n            />\n            <small className=\"danger-error\">\n              {passwordErr ? passwordErr : \"\"}\n            </small>\n          </div>\n          <button\n            type=\"button\"\n            className=\"login-btn\"\n            onClick={this.submitRegister.bind(this)}\n          >\n            Sign-up\n          </button>\n        </div>\n      </div>\n    ); \n  }\n}\n\nexport default App;\n\n/*\nonClick={this.submitRegister.bind(this)}\n\nonClick={this.LoginBox.bind(this)}\nonClick={this.RegisterBox.bind(this)}\n*/"]},"metadata":{},"sourceType":"module"}