{"ast":null,"code":"import _toConsumableArray from \"/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/src/login/LoginBox.js\";\nimport React, { Component } from 'react';\nimport cookie from \"react-cookies\";\nimport logo from \"./logo.svg\";\nimport './login.css';\nimport $ from 'jquery';\nimport { BrowserRouter as Router, Redirect, Route, Link, Switch } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nvar validator = require(\"email-validator\");\n\nvar appurl = \"http://localhost:1433\";\nexport var LoginBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginBox, _React$Component);\n\n  function LoginBox(props) {\n    var _this;\n\n    _classCallCheck(this, LoginBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginBox).call(this, props));\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      errors: [],\n      redirect: false,\n      show: false,\n      isverified: false,\n      hasextrainfo: false\n    };\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitLogin = _this.submitLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.redirecting = _this.redirecting.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginBox, [{\n    key: \"showValidationErr\",\n    value: function showValidationErr(elm, msg) {\n      this.setState(function (prevState) {\n        return {\n          errors: [].concat(_toConsumableArray(prevState.errors), [{\n            elm: elm,\n            msg: msg\n          }])\n        };\n      });\n    }\n  }, {\n    key: \"clearValidationErr\",\n    value: function clearValidationErr(elm) {\n      this.setState(function (prevState) {\n        var newArr = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = prevState.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var err = _step.value;\n\n            if (elm != err.elm) {\n              newArr.push(err);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return {\n          errors: newArr\n        };\n      });\n    }\n  }, {\n    key: \"onUsernameChange\",\n    value: function onUsernameChange(param) {\n      this.setState({\n        username: param.target.value\n      });\n      this.clearValidationErr(\"username\");\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(param) {\n      this.setState({\n        password: param.target.value\n      });\n      this.clearValidationErr(\"password\");\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        show: false\n      });\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"submitLogin\",\n    value: function submitLogin(param) {\n      console.log(this.props); // this.props.history.push('/home');\n\n      if (this.state.username == \"\") {\n        this.showValidationErr(\"username\", \"username cannot be empty\");\n      }\n\n      if (validator.validate(this.state.username) === false) {\n        this.showValidationErr(\"username\", \"Enter proper Email ID\");\n      }\n\n      if (this.state.password == \"\") {\n        this.showValidationErr(\"password\", \"password cannot be empty\");\n      }\n\n      console.log(\"login going\");\n\n      if (this.state.username !== \"\" && this.state.password !== \"\") {\n        // jquery\n        $.ajax({\n          url: appurl + '/account/logIn',\n          method: 'POST',\n          data: {\n            email: this.state.username,\n            password: this.state.password\n          },\n          success: function (result) {\n            if (result.user) {\n              console.log(\"login success\");\n              cookie.save(result.cname1, result.cvalue1, {\n                path: \"/\",\n                expires: new Date(result.cookieexpire)\n              });\n              cookie.save('uid', result.user._id, {\n                path: \"/\",\n                expires: new Date(result.cookieexpire)\n              });\n              console.log(result.user);\n              this.setState({\n                redirect: true\n              });\n              this.setState({\n                isverified: result.user.verified\n              });\n              this.setState({\n                hasextrainfo: result.user.addedExtraInfo\n              });\n              this.redirecting();\n            } else {\n              console.log(\"login failed\");\n            }\n          }.bind(this)\n        });\n      }\n    }\n  }, {\n    key: \"redirecting\",\n    value: function redirecting() {\n      console.log(this.state.redirect);\n      console.log(this.state.isverified);\n      console.log(this.state.hasextrainfo);\n\n      if (this.state.redirect) {\n        console.log(\"redirecting\");\n        console.log(this.state.redirect);\n        console.log(this.state.isverified);\n        console.log(this.state.hasextrainfo);\n\n        if (this.state.isverified === false) {\n          console.log(\"very ma \");\n          cookie.remove(\"cookiesNamejwt\");\n          cookie.remove(\"uid\");\n          return React.createElement(Redirect, {\n            to: \"/login\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          });\n        }\n\n        if (this.state.hasextrainfo === false) {\n          console.log(\"very ma \");\n          return React.createElement(Redirect, {\n            to: \"/profile\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(Redirect, {\n          to: \"/home\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var show = this.state.show;\n      var usernameErr = null,\n          passwordErr = null;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.state.errors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var err = _step2.value;\n\n          if (err.elm == \"username\") {\n            usernameErr = err.msg;\n          }\n\n          if (err.elm == \"password\") {\n            passwordErr = err.msg;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"inner-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        className: \"login-input\",\n        placeholder: \"Enter Email\",\n        onChange: this.onUsernameChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, usernameErr ? usernameErr : \"\")), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"login-input\",\n        placeholder: \"Enter Password\",\n        onChange: this.onPasswordChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, passwordErr ? passwordErr : \"\")), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"login-btn\",\n        onClick: this.submitLogin.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Login\")), React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleShow.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Forgot Password ?\"), React.createElement(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Forgot Password\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        required: \"true\",\n        placeholder: \"Enter you registered email\",\n        class: \"forgot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleClose.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Close\"), React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleClose.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Send\"))));\n    }\n  }]);\n\n  return LoginBox;\n}(React.Component);","map":{"version":3,"sources":["/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/src/login/LoginBox.js"],"names":["React","Component","cookie","$","BrowserRouter","Router","Redirect","Route","Link","Switch","Button","Modal","validator","require","appurl","LoginBox","props","state","username","password","errors","redirect","show","isverified","hasextrainfo","handleShow","bind","handleClose","submitLogin","redirecting","elm","msg","setState","prevState","newArr","err","push","param","target","value","clearValidationErr","console","log","showValidationErr","validate","ajax","url","method","data","email","success","result","user","save","cname1","cvalue1","path","expires","Date","cookieexpire","_id","verified","addedExtraInfo","remove","usernameErr","passwordErr","onUsernameChange","onPasswordChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport cookie from \"react-cookies\";\nimport logo from './logo.svg';\nimport './login.css';\nimport $ from 'jquery';\nimport {BrowserRouter as Router, Redirect, Route, Link, Switch} from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nvar validator = require(\"email-validator\");\n\nlet appurl = \"http://localhost:1433\"\n\nexport class LoginBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      username: \"\", \n      password: \"\",\n      errors: [], \n      redirect: false,\n      show: false,\n      isverified: false,\n      hasextrainfo: false,\n    };\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.submitLogin = this.submitLogin.bind(this);\n    this.redirecting = this.redirecting.bind(this);\n  }\n  showValidationErr(elm, msg) {\n    this.setState(prevState => ({\n      errors: [...prevState.errors, { elm, msg }]\n    }));\n  }\n  clearValidationErr(elm) {\n    this.setState(prevState => {\n      let newArr = [];\n      for (let err of prevState.errors) {\n        if (elm != err.elm) {\n          newArr.push(err);\n        }\n      }\n      return { errors: newArr };\n    });\n  }\n  onUsernameChange(param) {\n    this.setState({ username: param.target.value });\n    this.clearValidationErr(\"username\");\n  }\n  onPasswordChange(param) {\n    this.setState({ password: param.target.value });\n    this.clearValidationErr(\"password\");\n  }\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n  submitLogin(param) {\n    console.log(this.props);\n\n    // this.props.history.push('/home');\n    \n    if (this.state.username == \"\") {\n      this.showValidationErr(\"username\", \"username cannot be empty\");\n    }\n    if(validator.validate(this.state.username) === false){\n      this.showValidationErr(\"username\", \"Enter proper Email ID\"); \n    }\n    if (this.state.password == \"\") {\n      this.showValidationErr(\"password\", \"password cannot be empty\");\n    }\n    console.log(\"login going\"); \n    if(this.state.username !== \"\" && this.state.password !== \"\"){\n      // jquery\n      $.ajax({\n        url: appurl + '/account/logIn',\n        method: 'POST',\n        data:{\n          email: this.state.username,\n          password: this.state.password\n        },\n        success: function(result){\n          if(result.user){\n            console.log(\"login success\");\n            cookie.save(result.cname1, result.cvalue1, {path:\"/\", expires:new Date(result.cookieexpire) });\n            cookie.save('uid', result.user._id, {path:\"/\", expires:new Date(result.cookieexpire) });\n            console.log(result.user);\n            this.setState({ redirect: true });\n            this.setState({ isverified: result.user.verified });\n            this.setState({ hasextrainfo: result.user.addedExtraInfo });\n            this.redirecting();\n          }\n          else{\n            console.log(\"login failed\");\n          }\n        }.bind(this)\n      });\n    }\n  }\n\n  redirecting(){\n    console.log(this.state.redirect);\n    console.log(this.state.isverified);\n    console.log(this.state.hasextrainfo);\n    if(this.state.redirect){\n      console.log(\"redirecting\");\n      console.log(this.state.redirect);\n      console.log(this.state.isverified);\n      console.log(this.state.hasextrainfo);\n      if(this.state.isverified === false){\n        console.log(\"very ma \");\n        cookie.remove(\"cookiesNamejwt\");\n        cookie.remove(\"uid\");\n        return <Redirect to='/login'/>\n      }\n      if(this.state.hasextrainfo === false){\n        console.log(\"very ma \");\n        return <Redirect to='/profile'/>\n      }\n      return <Redirect to='/home'/>\n    }\n  }\n  render() {\n    const { show } = this.state;\n    let usernameErr = null,\n      passwordErr = null;\n    for (let err of this.state.errors) {\n      if (err.elm == \"username\") {\n        usernameErr = err.msg;\n      }\n      if (err.elm == \"password\") {\n        passwordErr = err.msg;\n      }\n    }\n  \n    return (\n\n      <div className=\"inner-container\">\n        <div>\n          \n        </div>\n        <div className=\"header\">Login</div>\n        <div className=\"box\">\n          <div className=\"input-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              required\n              className=\"login-input\"\n              placeholder=\"Enter Email\"\n\n              onChange={this.onUsernameChange.bind(this)}\n            />\n            <small className=\"danger-error\">\n              {usernameErr ? usernameErr : \"\"}\n            </small>\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"login-input\"\n              placeholder=\"Enter Password\"\n              onChange={this.onPasswordChange.bind(this)}\n            />\n            <small className=\"danger-error\">\n              {passwordErr ? passwordErr : \"\"}\n            </small>\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"login-btn\"\n            onClick={this.submitLogin.bind(this)}\n          >\n            Login\n          </button>\n        </div>\n\n        <Button variant=\"primary\" onClick={this.handleShow.bind(this)}>\n          Forgot Password ?\n        </Button>\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Forgot Password</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form>\n              <input\n                type=\"email\"\n                required=\"true\"\n                placeholder=\"Enter you registered email\"\n                class=\"forgot\"\n              />\n            </form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose.bind(this)}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={this.handleClose.bind(this)}>\n              Send\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}