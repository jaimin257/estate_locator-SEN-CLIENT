{"ast":null,"code":"import { useContext, useEffect, useState } from 'react';\nimport CookiesContext from './CookiesContext';\nexport default function useCookies(dependencies) {\n  var cookies = useContext(CookiesContext);\n\n  if (!cookies) {\n    throw new Error('Missing <CookiesProvider>');\n  }\n\n  var initialCookies = cookies.getAll();\n\n  var _a = useState(initialCookies),\n      allCookies = _a[0],\n      setCookies = _a[1];\n\n  useEffect(function () {\n    function onChange() {\n      var newCookies = cookies.getAll();\n\n      if (shouldUpdate(dependencies || null, newCookies, allCookies)) {\n        setCookies(cookies.getAll());\n      }\n    }\n\n    cookies.addChangeListener(onChange);\n    return function () {\n      cookies.removeChangeListener(onChange);\n    };\n  }, [cookies]);\n  return [allCookies, cookies.set.bind(cookies), cookies.remove.bind(cookies)];\n}\n\nfunction shouldUpdate(dependencies, newCookies, oldCookies) {\n  if (!dependencies) {\n    return true;\n  }\n\n  for (var _i = 0, dependencies_1 = dependencies; _i < dependencies_1.length; _i++) {\n    var dependency = dependencies_1[_i];\n\n    if (newCookies[dependency] !== oldCookies[dependency]) {\n      return true;\n    }\n  }\n\n  return false;\n}","map":null,"metadata":{},"sourceType":"module"}