{"ast":null,"code":"import _toConsumableArray from \"/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/src/login/RegisterBox.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './login.css';\nimport $ from 'jquery';\n\nvar validator = require(\"email-validator\");\n\nvar appurl = \"http://localhost:1433\";\nexport var RegisterBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegisterBox, _React$Component);\n\n  function RegisterBox(props) {\n    var _this;\n\n    _classCallCheck(this, RegisterBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegisterBox).call(this, props));\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: []\n    };\n    return _this;\n  }\n\n  _createClass(RegisterBox, [{\n    key: \"showValidationErr\",\n    value: function showValidationErr(elm, msg) {\n      this.setState(function (prevState) {\n        return {\n          errors: [].concat(_toConsumableArray(prevState.errors), [{\n            elm: elm,\n            msg: msg\n          }])\n        };\n      });\n    }\n  }, {\n    key: \"clearValidationErr\",\n    value: function clearValidationErr(elm) {\n      this.setState(function (prevState) {\n        var newArr = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = prevState.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var err = _step.value;\n\n            if (elm != err.elm) {\n              newArr.push(err);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return {\n          errors: newArr\n        };\n      });\n    }\n  }, {\n    key: \"onEmailChange\",\n    value: function onEmailChange(param) {\n      this.setState({\n        email: param.target.value\n      });\n      this.clearValidationErr(\"email\");\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(param) {\n      this.setState({\n        password: param.target.value\n      });\n      this.clearValidationErr(\"password\");\n    }\n  }, {\n    key: \"onPassword2Change\",\n    value: function onPassword2Change(param) {\n      this.setState({\n        password2: param.target.value\n      });\n      this.clearValidationErr(\"password2\");\n    }\n  }, {\n    key: \"submitRegister\",\n    value: function submitRegister(param) {\n      // console.log('get register request');\n      if (this.state.email == \"\") {\n        this.showValidationErr(\"email\", \"Email ID cannot be empty\");\n        return;\n      }\n\n      if (validator.validate(this.state.email) === false) {\n        this.showValidationErr(\"email\", \"Enter proper Email ID\");\n        return;\n      }\n\n      if (this.state.password == \"\") {\n        this.showValidationErr(\"password\", \"password cannot be empty\");\n        return;\n      }\n\n      if (this.state.password != this.state.password2) {\n        this.showValidationErr(\"password2\", \"password doesn't match\");\n        return;\n      } // console.log(\"register request sent\");\n\n\n      $.ajax({\n        url: appurl + '/account/register',\n        method: 'POST',\n        data: {\n          email: this.state.email,\n          password: this.state.password,\n          password2: this.state.password2\n        },\n        success: function (result) {\n          this.showValidationErr(\"response\", \"Verification Link Sent\"); // console.log(result);\n        }.bind(this),\n        error: function (result) {\n          this.showValidationErr(\"response\", \"Error in SignUp\");\n        }.bind(this)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var emailErr = null,\n          passwordErr = null,\n          password2Err = null,\n          responseErr = null;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.state.errors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var err = _step2.value;\n\n          if (err.elm == \"email\") {\n            emailErr = err.msg;\n          }\n\n          if (err.elm == \"password\") {\n            passwordErr = err.msg;\n          }\n\n          if (err.elm == \"password2\") {\n            password2Err = err.msg;\n          }\n\n          if (err.elm == \"response\") {\n            responseErr = err.msg;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"inner-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Sign-up\"), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Emaal\"), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        className: \"login-input\",\n        placeholder: \"Enter Email ID\",\n        onChange: this.onEmailChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, emailErr ? emailErr : \"\")), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        className: \"login-input\",\n        placeholder: \"Enter Password\",\n        onChange: this.onPasswordChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, passwordErr ? passwordErr : \"\")), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"login-input\",\n        placeholder: \"Enter Password Again\",\n        onChange: this.onPassword2Change.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, password2Err ? password2Err : \"\")), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"login-btn\",\n        onClick: this.submitRegister.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Sign-up\"), responseErr === \"Verification Link Sent\" && responseErr !== \"\" ? React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Verification Link Sent\") : React.createElement(\"small\", {\n        className: \"response-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"SignUp Failed\")));\n    }\n  }]);\n\n  return RegisterBox;\n}(React.Component);","map":{"version":3,"sources":["/home/itsme/mydata/SEN/estate_locator-SEN-CLIENT/src/login/RegisterBox.js"],"names":["React","Component","$","validator","require","appurl","RegisterBox","props","state","email","password","password2","errors","elm","msg","setState","prevState","newArr","err","push","param","target","value","clearValidationErr","showValidationErr","validate","ajax","url","method","data","success","result","bind","error","emailErr","passwordErr","password2Err","responseErr","onEmailChange","onPasswordChange","onPassword2Change","submitRegister"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,aAAP;AACA,OAAOC,CAAP,MAAc,QAAd;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAAC,iBAAD,CAAvB;;AACA,IAAIC,MAAM,GAAG,uBAAb;AAEA,WAAaC,WAAb;AAAA;AAAA;AAAA;;AACE,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,QAAQ,EAAE,EAAvB;AAA2BC,MAAAA,SAAS,EAAE,EAAtC;AAA0CC,MAAAA,MAAM,EAAE;AAAlD,KAAb;AAFiB;AAGlB;;AAJH;AAAA;AAAA,sCAMoBC,GANpB,EAMyBC,GANzB,EAM8B;AAC1B,WAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAC1BJ,UAAAA,MAAM,+BAAMI,SAAS,CAACJ,MAAhB,IAAwB;AAAEC,YAAAA,GAAG,EAAHA,GAAF;AAAOC,YAAAA,GAAG,EAAHA;AAAP,WAAxB;AADoB,SAAL;AAAA,OAAvB;AAGD;AAVH;AAAA;AAAA,uCAWqBD,GAXrB,EAW0B;AACtB,WAAKE,QAAL,CAAc,UAAAC,SAAS,EAAI;AACzB,YAAIC,MAAM,GAAG,EAAb;AADyB;AAAA;AAAA;;AAAA;AAEzB,+BAAgBD,SAAS,CAACJ,MAA1B,8HAAkC;AAAA,gBAAzBM,GAAyB;;AAChC,gBAAIL,GAAG,IAAIK,GAAG,CAACL,GAAf,EAAoB;AAClBI,cAAAA,MAAM,CAACE,IAAP,CAAYD,GAAZ;AACD;AACF;AANwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOzB,eAAO;AAAEN,UAAAA,MAAM,EAAEK;AAAV,SAAP;AACD,OARD;AASD;AArBH;AAAA;AAAA,kCAsBgBG,KAtBhB,EAsBuB;AACnB,WAAKL,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAEW,KAAK,CAACC,MAAN,CAAaC;AAAtB,OAAd;AACA,WAAKC,kBAAL,CAAwB,OAAxB;AACD;AAzBH;AAAA;AAAA,qCA0BmBH,KA1BnB,EA0B0B;AACtB,WAAKL,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAEU,KAAK,CAACC,MAAN,CAAaC;AAAzB,OAAd;AACA,WAAKC,kBAAL,CAAwB,UAAxB;AACD;AA7BH;AAAA;AAAA,sCA8BoBH,KA9BpB,EA8B2B;AACvB,WAAKL,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAES,KAAK,CAACC,MAAN,CAAaC;AAA1B,OAAd;AACA,WAAKC,kBAAL,CAAwB,WAAxB;AACD;AAjCH;AAAA;AAAA,mCAkCiBH,KAlCjB,EAkCwB;AACpB;AACA,UAAI,KAAKZ,KAAL,CAAWC,KAAX,IAAoB,EAAxB,EAA4B;AAC1B,aAAKe,iBAAL,CAAuB,OAAvB,EAAgC,0BAAhC;AACA;AACD;;AACD,UAAGrB,SAAS,CAACsB,QAAV,CAAmB,KAAKjB,KAAL,CAAWC,KAA9B,MAAyC,KAA5C,EAAkD;AAChD,aAAKe,iBAAL,CAAuB,OAAvB,EAAgC,uBAAhC;AACA;AACD;;AACD,UAAI,KAAKhB,KAAL,CAAWE,QAAX,IAAuB,EAA3B,EAA+B;AAC7B,aAAKc,iBAAL,CAAuB,UAAvB,EAAmC,0BAAnC;AACA;AACD;;AACD,UAAG,KAAKhB,KAAL,CAAWE,QAAX,IAAuB,KAAKF,KAAL,CAAWG,SAArC,EAA+C;AAC7C,aAAKa,iBAAL,CAAuB,WAAvB,EAAoC,wBAApC;AACA;AACD,OAjBmB,CAkBpB;;;AACAtB,MAAAA,CAAC,CAACwB,IAAF,CAAO;AACHC,QAAAA,GAAG,EAAEtB,MAAM,GAAG,mBADX;AAEHuB,QAAAA,MAAM,EAAE,MAFL;AAGHC,QAAAA,IAAI,EAAC;AACHpB,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KADf;AAEHC,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAFlB;AAGHC,UAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG;AAHnB,SAHF;AAQHmB,QAAAA,OAAO,EAAE,UAASC,MAAT,EAAgB;AACvB,eAAKP,iBAAL,CAAuB,UAAvB,EAAmC,wBAAnC,EADuB,CAEvB;AACD,SAHQ,CAGPQ,IAHO,CAGF,IAHE,CARN;AAYHC,QAAAA,KAAK,EAAE,UAAUF,MAAV,EAAiB;AACtB,eAAKP,iBAAL,CAAuB,UAAvB,EAAmC,iBAAnC;AACD,SAFM,CAELQ,IAFK,CAEA,IAFA;AAZJ,OAAP;AAgBD;AArEH;AAAA;AAAA,6BAuEW;AACP,UAAIE,QAAQ,GAAG,IAAf;AAAA,UACIC,WAAW,GAAG,IADlB;AAAA,UAEIC,YAAY,GAAG,IAFnB;AAAA,UAGIC,WAAW,GAAG,IAHlB;AADO;AAAA;AAAA;;AAAA;AAKP,8BAAgB,KAAK7B,KAAL,CAAWI,MAA3B,mIAAmC;AAAA,cAA1BM,GAA0B;;AACjC,cAAIA,GAAG,CAACL,GAAJ,IAAW,OAAf,EAAwB;AACtBqB,YAAAA,QAAQ,GAAGhB,GAAG,CAACJ,GAAf;AACD;;AACD,cAAII,GAAG,CAACL,GAAJ,IAAW,UAAf,EAA2B;AACzBsB,YAAAA,WAAW,GAAGjB,GAAG,CAACJ,GAAlB;AACD;;AACD,cAAII,GAAG,CAACL,GAAJ,IAAW,WAAf,EAA4B;AAC1BuB,YAAAA,YAAY,GAAGlB,GAAG,CAACJ,GAAnB;AACD;;AACD,cAAII,GAAG,CAACL,GAAJ,IAAW,UAAf,EAA2B;AACzBwB,YAAAA,WAAW,GAAGnB,GAAG,CAACJ,GAAlB;AACD;AACF;AAlBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBP,aACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,SAAS,EAAC,aAJZ;AAKE,QAAA,WAAW,EAAC,gBALd;AAME,QAAA,QAAQ,EAAE,KAAKwB,aAAL,CAAmBN,IAAnB,CAAwB,IAAxB,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAUE;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGE,QAAQ,GAAGA,QAAH,GAAc,EADzB,CAVF,CADF,EAgBE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,SAAS,EAAC,aAJZ;AAKE,QAAA,WAAW,EAAC,gBALd;AAME,QAAA,QAAQ,EAAE,KAAKK,gBAAL,CAAsBP,IAAtB,CAA2B,IAA3B,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAUE;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGG,WAAW,GAAGA,WAAH,GAAiB,EAD/B,CAVF,CAhBF,EA+BE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,SAAS,EAAC,aAHZ;AAIE,QAAA,WAAW,EAAC,sBAJd;AAKE,QAAA,QAAQ,EAAE,KAAKK,iBAAL,CAAuBR,IAAvB,CAA4B,IAA5B,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EASE;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGI,YAAY,GAAGA,YAAH,GAAkB,EADjC,CATF,CA/BF,EA4CE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,WAFZ;AAGE,QAAA,OAAO,EAAE,KAAKK,cAAL,CAAoBT,IAApB,CAAyB,IAAzB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA5CF,EAqDIK,WAAW,KAAK,wBAAhB,IAA4CA,WAAW,KAAK,EAA5D,GACE;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,GAME;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBA3DN,CAFF,CADF;AAuED;AAlKH;;AAAA;AAAA,EAAiCrC,KAAK,CAACC,SAAvC","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './login.css';\nimport $ from 'jquery';\nvar validator = require(\"email-validator\");\nlet appurl = \"http://localhost:1433\"\n\nexport class RegisterBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { email: \"\", password: \"\", password2: \"\", errors: [] };\n  }\n\n  showValidationErr(elm, msg) {\n    this.setState(prevState => ({\n      errors: [...prevState.errors, { elm, msg }]\n    }));\n  }\n  clearValidationErr(elm) {\n    this.setState(prevState => {\n      let newArr = [];\n      for (let err of prevState.errors) {\n        if (elm != err.elm) {\n          newArr.push(err);\n        }\n      }\n      return { errors: newArr };\n    });\n  }\n  onEmailChange(param) {\n    this.setState({ email: param.target.value });\n    this.clearValidationErr(\"email\");\n  }\n  onPasswordChange(param) {\n    this.setState({ password: param.target.value });\n    this.clearValidationErr(\"password\");\n  }\n  onPassword2Change(param) {\n    this.setState({ password2: param.target.value });\n    this.clearValidationErr(\"password2\");\n  }\n  submitRegister(param) {\n    // console.log('get register request');\n    if (this.state.email == \"\") {\n      this.showValidationErr(\"email\", \"Email ID cannot be empty\");\n      return;\n    }\n    if(validator.validate(this.state.email) === false){\n      this.showValidationErr(\"email\", \"Enter proper Email ID\"); \n      return;\n    }\n    if (this.state.password == \"\") {\n      this.showValidationErr(\"password\", \"password cannot be empty\");\n      return;\n    }\n    if(this.state.password != this.state.password2){\n      this.showValidationErr(\"password2\", \"password doesn't match\"); \n      return;\n    }\n    // console.log(\"register request sent\");\n    $.ajax({\n        url: appurl + '/account/register',\n        method: 'POST',\n        data:{\n          email: this.state.email,\n          password: this.state.password,\n          password2: this.state.password2\n        },\n        success: function(result){\n          this.showValidationErr(\"response\", \"Verification Link Sent\"); \n          // console.log(result);\n        }.bind(this),\n        error: function (result){\n          this.showValidationErr(\"response\", \"Error in SignUp\"); \n        }.bind(this)\n      })\n  }\n\n  render() {\n    let emailErr = null,\n        passwordErr = null,\n        password2Err = null,\n        responseErr = null;\n    for (let err of this.state.errors) {\n      if (err.elm == \"email\") {\n        emailErr = err.msg;\n      }\n      if (err.elm == \"password\") {\n        passwordErr = err.msg;\n      }\n      if (err.elm == \"password2\") {\n        password2Err = err.msg;\n      }\n      if (err.elm == \"response\") {\n        responseErr = err.msg;\n      }\n    }\n\n    return (\n      <div className=\"inner-container\">\n        <div className=\"header\">Sign-up</div>\n        <div className=\"box\">\n          <div className=\"input-group\">\n            <label htmlFor=\"email\">Emaal</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              required\n              className=\"login-input\"\n              placeholder=\"Enter Email ID\"\n              onChange={this.onEmailChange.bind(this)}\n            />\n            <small className=\"danger-error\">\n              {emailErr ? emailErr : \"\"}\n            </small>\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              required\n              className=\"login-input\"\n              placeholder=\"Enter Password\"\n              onChange={this.onPasswordChange.bind(this)}\n            />\n            <small className=\"danger-error\">\n              {passwordErr ? passwordErr : \"\"}\n            </small>\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"password2\">Confirm Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"login-input\"\n              placeholder=\"Enter Password Again\"\n              onChange={this.onPassword2Change.bind(this)}\n            />\n            <small className=\"danger-error\">\n              {password2Err ? password2Err : \"\"}\n            </small>\n          </div>\n          <button\n            type=\"button\"\n            className=\"login-btn\"\n            onClick={this.submitRegister.bind(this)}\n          >\n            Sign-up\n          </button>\n\n          {\n            responseErr === \"Verification Link Sent\" && responseErr !== \"\" ? (\n              <small className=\"danger-error\">\n                Verification Link Sent\n              </small>\n            ) :\n            (\n              <small className=\"response-error\">\n                SignUp Failed\n              </small>\n            )\n\n          }\n        </div>\n      </div>\n    ); \n  }\n}\n"]},"metadata":{},"sourceType":"module"}