{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","LoginOpen","RegisterOpen","react_default","a","createElement","className","App_LoginBox","App_RegisterBox","onClick","LoginBox","bind","RegisterBox","setState","React","Component","_this2","username","password","errors","elm","msg","prevState","concat","toConsumableArray","newArr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","value","push","return","param","target","clearValidationErr","showValidationErr","usernameErr","passwordErr","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","htmlFor","type","name","placeholder","submitLogin","_this3","email","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","emailErr","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","onChange","onUsernameChange","onEmailChange","onPasswordChange","submitRegister","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oLCKlCC,2BACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,WAAW,EACXC,cAAc,GAJCT,wEASjB,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZV,KAAKI,MAAMC,WAAaE,EAAAC,EAAAC,cAACE,EAAD,MACxBX,KAAKI,MAAME,cAAgBC,EAAAC,EAAAC,cAACG,EAAD,OAE9BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OACEC,UACE,eACCV,KAAKI,MAAMC,UAAY,sBAAwB,IAElDQ,QAASb,KAAKc,SAASC,KAAKf,OAL9B,SASAO,EAAAC,EAAAC,cAAA,OACEC,UACE,eACCV,KAAKI,MAAME,aAAe,sBAAwB,IAErDO,QAASb,KAAKgB,YAAYD,KAAKf,OALjC,gDAcNA,KAAKiB,SAAS,CAAEZ,WAAW,EAAMC,cAAc,0CAI/CN,KAAKiB,SAAS,CAAEX,cAAc,EAAMD,WAAW,WA5CjCa,IAAMC,YA+ClBL,cACJ,SAAAA,EAAYlB,GAAO,IAAAwB,EAAA,OAAAtB,OAAAC,EAAA,EAAAD,CAAAE,KAAAc,IACjBM,EAAAtB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgB,GAAAX,KAAAH,KAAMJ,KACDQ,MAAQ,CAAEiB,SAAU,GAAIC,SAAU,GAAIC,OAAQ,IAFlCH,iFAIDI,EAAKC,GACrBzB,KAAKiB,SAAS,SAAAS,GAAS,MAAK,CAC1BH,OAAM,GAAAI,OAAA7B,OAAA8B,EAAA,EAAA9B,CAAM4B,EAAUH,QAAhB,CAAwB,CAAEC,MAAKC,uDAGtBD,GACjBxB,KAAKiB,SAAS,SAAAS,GACZ,IAAIG,EAAS,GADYC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEzB,QAAAC,EAAAC,EAAgBT,EAAUH,OAA1Ba,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAkC,KAAzBU,EAAyBN,EAAAO,MAC5BjB,GAAOgB,EAAIhB,KACbK,EAAOa,KAAKF,IAJS,MAAAA,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAOzB,MAAO,CAAET,OAAQM,8CAGJe,GACf5C,KAAKiB,SAAS,CAAEI,SAAUuB,EAAMC,OAAOJ,QACvCzC,KAAK8C,mBAAmB,qDAETF,GACf5C,KAAKiB,SAAS,CAAEK,SAAUsB,EAAMC,OAAOJ,QACvCzC,KAAK8C,mBAAmB,gDAEdF,GACiB,IAAvB5C,KAAKI,MAAMiB,UACbrB,KAAK+C,kBAAkB,WAAY,4BAEV,IAAvB/C,KAAKI,MAAMkB,UACbtB,KAAK+C,kBAAkB,WAAY,6DAKrC,IAAIC,EAAc,KAChBC,EAAc,KAFTC,GAAA,EAAAC,GAAA,EAAAC,OAAAnB,EAAA,IAGP,QAAAoB,EAAAC,EAAgBtD,KAAKI,MAAMmB,OAA3Ba,OAAAC,cAAAa,GAAAG,EAAAC,EAAAhB,QAAAC,MAAAW,GAAA,EAAmC,KAA1BV,EAA0Ba,EAAAZ,MAClB,YAAXD,EAAIhB,MACNwB,EAAcR,EAAIf,KAEL,YAAXe,EAAIhB,MACNyB,EAAcT,EAAIf,MARf,MAAAe,GAAAW,GAAA,EAAAC,EAAAZ,EAAA,YAAAU,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,GAWP,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO8C,QAAQ,YAAf,YACAhD,EAAAC,EAAAC,cAAA,SACE+C,KAAK,OACLC,KAAK,WACL/C,UAAU,cACVgD,YAAY,aAEdnD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACdsC,GAA4B,KAIjCzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO8C,QAAQ,YAAf,YACAhD,EAAAC,EAAAC,cAAA,SACE+C,KAAK,WACLC,KAAK,WACL/C,UAAU,cACVgD,YAAY,aAEdnD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACduC,GAA4B,KAIjC1C,EAAAC,EAAAC,cAAA,UACE+C,KAAK,SACL9C,UAAU,YACVG,QAASb,KAAK2D,YAAY5C,KAAKf,OAHjC,kBA/EakB,IAAMC,WA2FvBH,cACJ,SAAAA,EAAYpB,GAAO,IAAAgE,EAAA,OAAA9D,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,IACjB4C,EAAA9D,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkB,GAAAb,KAAAH,KAAMJ,KACDQ,MAAQ,CAAEiB,SAAU,GAAIwC,MAAO,GAAIvC,SAAU,GAAIC,OAAQ,IAF7CqC,iFAKDpC,EAAKC,GACrBzB,KAAKiB,SAAS,SAAAS,GAAS,MAAK,CAC1BH,OAAM,GAAAI,OAAA7B,OAAA8B,EAAA,EAAA9B,CAAM4B,EAAUH,QAAhB,CAAwB,CAAEC,MAAKC,uDAGtBD,GACjBxB,KAAKiB,SAAS,SAAAS,GACZ,IAAIG,EAAS,GADYiC,GAAA,EAAAC,GAAA,EAAAC,OAAA/B,EAAA,IAEzB,QAAAgC,EAAAC,EAAgBxC,EAAUH,OAA1Ba,OAAAC,cAAAyB,GAAAG,EAAAC,EAAA5B,QAAAC,MAAAuB,GAAA,EAAkC,KAAzBtB,EAAyByB,EAAAxB,MAC5BjB,GAAOgB,EAAIhB,KACbK,EAAOa,KAAKF,IAJS,MAAAA,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,YAAAsB,GAAA,MAAAI,EAAAvB,QAAAuB,EAAAvB,SAAA,WAAAoB,EAAA,MAAAC,GAOzB,MAAO,CAAEzC,OAAQM,8CAGJe,GACf5C,KAAKiB,SAAS,CAAEI,SAAUuB,EAAMC,OAAOJ,QACvCzC,KAAK8C,mBAAmB,qDAETF,GACf5C,KAAKiB,SAAS,CAAEK,SAAUsB,EAAMC,OAAOJ,QACvCzC,KAAK8C,mBAAmB,kDAEZF,GACZ5C,KAAKiB,SAAS,CAAE4C,MAAOjB,EAAMC,OAAOJ,QACpCzC,KAAK8C,mBAAmB,gDAEXF,GACc,IAAvB5C,KAAKI,MAAMiB,UACbrB,KAAK+C,kBAAkB,WAAY,4BAEV,IAAvB/C,KAAKI,MAAMkB,UACbtB,KAAK+C,kBAAkB,WAAY,4BAEb,IAApB/C,KAAKI,MAAMyD,OACb7D,KAAK+C,kBAAkB,QAAS,0DAKlC,IAAIC,EAAc,KAChBC,EAAc,KACdkB,EAAW,KAHNC,GAAA,EAAAC,GAAA,EAAAC,OAAArC,EAAA,IAIP,QAAAsC,EAAAC,EAAgBxE,KAAKI,MAAMmB,OAA3Ba,OAAAC,cAAA+B,GAAAG,EAAAC,EAAAlC,QAAAC,MAAA6B,GAAA,EAAmC,KAA1B5B,EAA0B+B,EAAA9B,MAClB,YAAXD,EAAIhB,MACNwB,EAAcR,EAAIf,KAEL,YAAXe,EAAIhB,MACNyB,EAAcT,EAAIf,KAEL,SAAXe,EAAIhB,MACN2C,EAAW3B,EAAIf,MAZZ,MAAAe,GAAA6B,GAAA,EAAAC,EAAA9B,EAAA,YAAA4B,GAAA,MAAAI,EAAA7B,QAAA6B,EAAA7B,SAAA,WAAA0B,EAAA,MAAAC,GAeP,OACE/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO8C,QAAQ,YAAf,YACAhD,EAAAC,EAAAC,cAAA,SACE+C,KAAK,OACLC,KAAK,WACL/C,UAAU,cACVgD,YAAY,WACZe,SAAUzE,KAAK0E,iBAAiB3D,KAAKf,QAEvCO,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACdsC,GAA4B,KAIjCzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO8C,QAAQ,SAAf,SACAhD,EAAAC,EAAAC,cAAA,SACE+C,KAAK,OACLC,KAAK,QACL/C,UAAU,cACVgD,YAAY,QACZe,SAAUzE,KAAK2E,cAAc5D,KAAKf,QAEpCO,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAgByD,GAAsB,KAGzD5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO8C,QAAQ,YAAf,YACAhD,EAAAC,EAAAC,cAAA,SACE+C,KAAK,WACLC,KAAK,WACL/C,UAAU,cACVgD,YAAY,WACZe,SAAUzE,KAAK4E,iBAAiB7D,KAAKf,QAEvCO,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACduC,GAA4B,KAGjC1C,EAAAC,EAAAC,cAAA,UACE+C,KAAK,SACL9C,UAAU,YACVG,QAASb,KAAK6E,eAAe9D,KAAKf,OAHpC,oBAxGgBkB,IAAMC,WAqHjBxB,ICxPKmF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7E,EAAAC,EAAAC,cAAC4E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.72d70b80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      LoginOpen: true,\n      RegisterOpen: false\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"root-container\">\n        <div className=\"box-container\">\n          {this.state.LoginOpen && <LoginBox />}\n          {this.state.RegisterOpen && <RegisterBox />}\n        </div>\n        <div className=\"box-controller\">\n          <div\n            className={\n              \"controller \" +\n              (this.state.LoginOpen ? \"selected-controller\" : \"\")\n            }\n            onClick={this.LoginBox.bind(this)}\n          >\n            Login\n          </div>\n          <div\n            className={\n              \"controller \" +\n              (this.state.RegisterOpen ? \"selected-controller\" : \"\")\n            }\n            onClick={this.RegisterBox.bind(this)}\n          >\n            Sign-up\n          </div>\n        </div>\n      </div>\n    );\n  }\n  LoginBox() {\n    this.setState({ LoginOpen: true, RegisterOpen: false });\n  }\n\n  RegisterBox() {\n    this.setState({ RegisterOpen: true, LoginOpen: false });\n  }\n}\nclass LoginBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\", errors: [] };\n  }\n  showValidationErr(elm, msg) {\n    this.setState(prevState => ({\n      errors: [...prevState.errors, { elm, msg }]\n    }));\n  }\n  clearValidationErr(elm) {\n    this.setState(prevState => {\n      let newArr = [];\n      for (let err of prevState.errors) {\n        if (elm != err.elm) {\n          newArr.push(err);\n        }\n      }\n      return { errors: newArr };\n    });\n  }\n  onUsernameChange(param) {\n    this.setState({ username: param.target.value });\n    this.clearValidationErr(\"username\");\n  }\n  onPasswordChange(param) {\n    this.setState({ password: param.target.value });\n    this.clearValidationErr(\"password\");\n  }\n  submitLogin(param) {\n    if (this.state.username == \"\") {\n      this.showValidationErr(\"username\", \"username cannot be empty\");\n    }\n    if (this.state.password == \"\") {\n      this.showValidationErr(\"password\", \"password cannot be empty\");\n    }\n  }\n\n  render() {\n    let usernameErr = null,\n      passwordErr = null;\n    for (let err of this.state.errors) {\n      if (err.elm == \"username\") {\n        usernameErr = err.msg;\n      }\n      if (err.elm == \"password\") {\n        passwordErr = err.msg;\n      }\n    }\n    return (\n      <div className=\"inner-container\">\n        <div className=\"header\">Login</div>\n        <div className=\"box\">\n          <div className=\"input-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              className=\"login-input\"\n              placeholder=\"Username\"\n            />\n            <small className=\"danger-error\">\n              {usernameErr ? usernameErr : \"\"}\n            </small>\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"login-input\"\n              placeholder=\"Password\"\n            />\n            <small className=\"danger-error\">\n              {passwordErr ? passwordErr : \"\"}\n            </small>\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"login-btn\"\n            onClick={this.submitLogin.bind(this)}\n          >\n            Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nclass RegisterBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", email: \"\", password: \"\", errors: [] };\n  }\n\n  showValidationErr(elm, msg) {\n    this.setState(prevState => ({\n      errors: [...prevState.errors, { elm, msg }]\n    }));\n  }\n  clearValidationErr(elm) {\n    this.setState(prevState => {\n      let newArr = [];\n      for (let err of prevState.errors) {\n        if (elm != err.elm) {\n          newArr.push(err);\n        }\n      }\n      return { errors: newArr };\n    });\n  }\n  onUsernameChange(param) {\n    this.setState({ username: param.target.value });\n    this.clearValidationErr(\"username\");\n  }\n  onPasswordChange(param) {\n    this.setState({ password: param.target.value });\n    this.clearValidationErr(\"password\");\n  }\n  onEmailChange(param) {\n    this.setState({ email: param.target.value });\n    this.clearValidationErr(\"email\");\n  }\n  submitRegister(param) {\n    if (this.state.username == \"\") {\n      this.showValidationErr(\"username\", \"username cannot be empty\");\n    }\n    if (this.state.password == \"\") {\n      this.showValidationErr(\"password\", \"password cannot be empty\");\n    }\n    if (this.state.email == \"\") {\n      this.showValidationErr(\"email\", \"email cannot be empty\");\n    }\n  }\n\n  render() {\n    let usernameErr = null,\n      passwordErr = null,\n      emailErr = null;\n    for (let err of this.state.errors) {\n      if (err.elm == \"username\") {\n        usernameErr = err.msg;\n      }\n      if (err.elm == \"password\") {\n        passwordErr = err.msg;\n      }\n      if (err.elm == \"email\") {\n        emailErr = err.msg;\n      }\n    }\n    return (\n      <div className=\"inner-container\">\n        <div className=\"header\">Sign-up</div>\n        <div className=\"box\">\n          <div className=\"input-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              className=\"login-input\"\n              placeholder=\"Username\"\n              onChange={this.onUsernameChange.bind(this)}\n            />\n            <small className=\"danger-error\">\n              {usernameErr ? usernameErr : \"\"}\n            </small>\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              className=\"login-input\"\n              placeholder=\"Email\"\n              onChange={this.onEmailChange.bind(this)}\n            />\n            <small className=\"danger-error\">{emailErr ? emailErr : \"\"}</small>\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"login-input\"\n              placeholder=\"Password\"\n              onChange={this.onPasswordChange.bind(this)}\n            />\n            <small className=\"danger-error\">\n              {passwordErr ? passwordErr : \"\"}\n            </small>\n          </div>\n          <button\n            type=\"button\"\n            className=\"login-btn\"\n            onClick={this.submitRegister.bind(this)}\n          >\n            Sign-up\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}